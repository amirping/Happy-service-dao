const express=require("express"),app=express(),port=3e3,db_engine=require("./js/engine_db");var bodyParser=require("body-parser");const cryptage_engine=require("./js/cryptage");app.use(bodyParser.urlencoded({extended:!1})),app.use(bodyParser.json());let db=db_engine.connector();app.use((e,s,o)=>{console.log(e.headers),o()}),app.use((e,s,o)=>{console.log("IP : "+e.connection.remoteAddress),o()}),app.use(function(e,s,o){s.header("Access-Control-Allow-Origin","http://localhost:4200"),s.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS, PUT, PATCH, DELETE"),s.setHeader("Access-Control-Allow-Headers","X-Requested-With,content-type"),s.setHeader("Access-Control-Allow-Credentials",!0),"OPTIONS"==e.method?s.status(200).json({}):o()}),app.use((e,s,o)=>{if(db_engine.stats.DB_linked){console.log(e.originalUrl);var t=e.protocol+"://"+e.get("host")+e.originalUrl;console.log("URL : "+t),o()}else console.log("Blocked access while DB is OFF"),s.status(500).json({msg:"Dis off , plz try later"})});let resp={server:"",db:""};app.all("/",(e,s)=>{let o=resp;o.server="ON",o.db=db_engine.stats,o.db.DB_linked?(o.msg="connected",o.code="200"):(o.set("msg","can't connect to Database , plz try later"),o.set("code","DBx01")),s.json(o)}),app.get("/api",function(e,s){s.status(200).json({msg:"OK"})}),app.post("/api/users",(e,s)=>{let o=e.body,t=(e.body.pseudo,e.body.pass);t=cryptage_engine.encrypt(t),s.json(200,o)}),app.use((e,s,o,t)=>{console.log(e),o.status(500).send("Something broke!")}),app.listen(process.env.PORT||3e3);