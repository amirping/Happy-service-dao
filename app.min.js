const express=require("express"),app=express(),port=3e3,db_engine=require("./js/engine_db");var bodyParser=require("body-parser");const cryptage_engine=require("./js/cryptage"),User=require("./models/user").User,Connection=require("./models/connection").COnnection;var routes=require("./js/routes");app.use(bodyParser.urlencoded({extended:!1})),app.use(bodyParser.json());let db=db_engine.connector();app.use((e,s,o)=>{console.log(e.headers),o()}),app.use((e,s,o)=>{console.log("IP : "+e.connection.remoteAddress),o()}),app.use(function(e,s,o){s.header("Access-Control-Allow-Origin","http://localhost:4200"),s.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS, PUT, PATCH, DELETE"),s.setHeader("Access-Control-Allow-Headers","X-Requested-With,content-type"),s.setHeader("Access-Control-Allow-Credentials",!0),"OPTIONS"==e.method?s.status(200).json({}):o()}),app.use((e,s,o)=>{if(db_engine.stats.DB_linked){console.log(e.originalUrl);var r=e.protocol+"://"+e.get("host")+e.originalUrl;console.log("URL : "+r),o()}else console.log("Blocked access while DB is OFF"),s.status(500).json({msg:"Dis off , plz try later"})});let resp={server:"",db:""};app.all("/",(e,s)=>{let o=resp;o.server="ON",o.db=db_engine.stats,o.db.DB_linked?(o.msg="connected",o.code="200"):(o.set("msg","can't connect to Database , plz try later"),o.set("code","DBx01")),s.json(o)}),app.use("/api",routes),app.use((e,s,o,r)=>{console.log(e),o.status(500).send("Something broke!")}),app.listen(process.env.PORT||3e3);